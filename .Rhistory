pk10r$cu_yr
L_i=pk10r%>%group_by(River)%>%summarize(l=n(),tmin=min(BroodYear)-1954+1,tmax=max(BroodYear)-1954+1)
CU_year=expand.grid(levels(factor(pk10r$CU)),seq(min(pk10r$BroodYear),max(pk10r$BroodYear)))
CU_year= CU_year[order(CU_year[,1]),]
CU_year[,3]=paste(CU_year[,1],CU_year[,2],sep="_")
pk10r$cu_yr=match(paste(pk10r$CU,pk10r$BroodYear,sep='_'),CU_year[,3])
dl=list(N=nrow(pk10r),
L=max(pk10r$BroodYear)-min(pk10r$BroodYear)+1,
C=length(unique(pk10r$CU)),
J=length(unique(pk10r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(pk10r$CU)), #CU index by observation
C_ii=as.numeric(factor(pk10r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(pk10r$River)), #River index by observation
J_ii=pk10r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(pk10r$BroodYear)), #brood year index
R_S=pk10r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=pk10r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(pk10r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
fit1bh_pk_pd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
dl=list(N=nrow(pk10r),
L=max(pk10r$BroodYear)-min(pk10r$BroodYear)+1,
C=length(unique(pk10r$CU)),
J=length(unique(pk10r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(pk10r$CU)), #CU index by observation
C_ii=as.numeric(factor(pk10r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(pk10r$River)), #River index by observation
J_ii=pk10r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(pk10r$BroodYear)), #brood year index
R_S=pk10r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=pk10r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(pk10r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
fit1bh_pk_pd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
#censure implausible values (extremely high productivity)
pk10r<- subset(pk10r,exp(ln_RS)<=80)
#data formatting...
pk10r=pk10r[order(factor(pk10r$River),pk10r$BroodYear),]
rownames(pk10r)=seq(1:nrow(pk10r))
#normalize ECA - logit transformation (ie. log(x/(1-x)))
pk10r$logit.ECA=qlogis(pk10r$ECA_age_proxy_forested_only+0.005)
pk10r$logit.ECA.std=(pk10r$logit.ECA-mean(pk10r$logit.ECA))/sd(pk10r$logit.ECA)
#normalize cumulative % disturbed
pk10r$disturbedarea_prct_cs2=ifelse(pk10r$disturbedarea_prct_cs<1,1,pk10r$disturbedarea_prct_cs)
pk10r$disturbedarea_prct_cs2=ifelse(pk10r$disturbedarea_prct_cs2>99,99,pk10r$disturbedarea_prct_cs2)
pk10r$logit.pdisturb=qlogis(pk10r$disturbedarea_prct_cs2/100)
pk10r$logit.pdisturb.std=(pk10r$logit.pdisturb-mean(pk10r$logit.pdisturb))/sd(pk10r$logit.pdisturb)
#sparse matrix of spawners
S_mat=make_design_matrix(pk10r$Spawners,pk10r$River)
#average ECA by stock
#just to see an overview of ECA by river
eca_s=pk10r%>%group_by(River)%>%summarize(m=mean(ECA_age_proxy_forested_only*100),m.std=mean(logit.ECA.std),range=max(ECA_age_proxy_forested_only*100)-min(ECA_age_proxy_forested_only*100),cu=unique(CU))
#sparse matrix of ECA
ECA_mat=make_design_matrix(pk10r$logit.ECA.std,pk10r$River)
disturb_mat=make_design_matrix(ch20r$logit.pdisturb.std,ch20r$River)
#watershed area by river
area_mat=make_design_matrix(pk10r$ln_area_km2_std,pk10r$River)
#interaction matrix
ExA_mat=ECA_mat*area_mat
#extract max S for priors on capacity & eq. recruitment
smax_prior=pk10r%>%group_by(River) %>%summarize(m.s=max(Spawners),m.r=max(Recruits))
#ragged start and end points for each SR series
N_s=rag_n(pk10r$River)
#cus by stock
cu=distinct(pk10r,River,.keep_all = T)
summary(factor(cu$CU))
#time points for each series
L_i=pk10r%>%group_by(River)%>%summarize(l=n(),tmin=min(BroodYear)-1954+1,tmax=max(BroodYear)-1954+1)
CU_year=expand.grid(levels(factor(pk10r$CU)),seq(min(pk10r$BroodYear),max(pk10r$BroodYear)))
CU_year= CU_year[order(CU_year[,1]),]
CU_year[,3]=paste(CU_year[,1],CU_year[,2],sep="_")
pk10r$cu_yr=match(paste(pk10r$CU,pk10r$BroodYear,sep='_'),CU_year[,3])
dl=list(N=nrow(pk10r),
L=max(pk10r$BroodYear)-min(pk10r$BroodYear)+1,
C=length(unique(pk10r$CU)),
J=length(unique(pk10r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index
ii=as.numeric(factor(pk10r$BroodYear)), #brood year index
R_S=pk10r$ln_RS,
S=S_mat, #design matrix for spawner counts
ECA=ECA_mat, #design matrix for standardized ECA
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
dl=list(N=nrow(pk10r),
L=max(pk10r$BroodYear)-min(pk10r$BroodYear)+1,
C=length(unique(pk10r$CU)),
J=length(unique(pk10r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(pk10r$CU)), #CU index by observation
C_ii=as.numeric(factor(pk10r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(pk10r$River)), #River index by observation
J_ii=pk10r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(pk10r$BroodYear)), #brood year index
R_S=pk10r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=pk10r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(pk10r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
fit1bh_pk_pd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
pk10r<- subset(pk10r,exp(ln_RS)<=80)
#data formatting...
pk10r=pk10r[order(factor(pk10r$River),pk10r$BroodYear),]
rownames(pk10r)=seq(1:nrow(pk10r))
#normalize ECA - logit transformation (ie. log(x/(1-x)))
pk10r$logit.ECA=qlogis(pk10r$ECA_age_proxy_forested_only+0.005)
pk10r$logit.ECA.std=(pk10r$logit.ECA-mean(pk10r$logit.ECA))/sd(pk10r$logit.ECA)
#normalize cumulative % disturbed
pk10r$disturbedarea_prct_cs2=ifelse(pk10r$disturbedarea_prct_cs<1,1,pk10r$disturbedarea_prct_cs)
pk10r$disturbedarea_prct_cs2=ifelse(pk10r$disturbedarea_prct_cs2>99,99,pk10r$disturbedarea_prct_cs2)
pk10r$logit.pdisturb=qlogis(pk10r$disturbedarea_prct_cs2/100)
pk10r$logit.pdisturb.std=(pk10r$logit.pdisturb-mean(pk10r$logit.pdisturb))/sd(pk10r$logit.pdisturb)
#sparse matrix of spawners
S_mat=make_design_matrix(pk10r$Spawners,pk10r$River)
#average ECA by stock
#just to see an overview of ECA by river
eca_s=pk10r%>%group_by(River)%>%summarize(m=mean(ECA_age_proxy_forested_only*100),m.std=mean(logit.ECA.std),range=max(ECA_age_proxy_forested_only*100)-min(ECA_age_proxy_forested_only*100),cu=unique(CU))
#sparse matrix of ECA
ECA_mat=make_design_matrix(pk10r$logit.ECA.std,pk10r$River)
disturb_mat=make_design_matrix(pk10r$logit.pdisturb.std,pk10r$River)
#watershed area by river
area_mat=make_design_matrix(pk10r$ln_area_km2_std,pk10r$River)
#interaction matrix
ExA_mat=ECA_mat*area_mat
#extract max S for priors on capacity & eq. recruitment
smax_prior=pk10r%>%group_by(River) %>%summarize(m.s=max(Spawners),m.r=max(Recruits))
#ragged start and end points for each SR series
N_s=rag_n(pk10r$River)
#cus by stock
cu=distinct(pk10r,River,.keep_all = T)
summary(factor(cu$CU))
#time points for each series
L_i=pk10r%>%group_by(River)%>%summarize(l=n(),tmin=min(BroodYear)-1954+1,tmax=max(BroodYear)-1954+1)
CU_year=expand.grid(levels(factor(pk10r$CU)),seq(min(pk10r$BroodYear),max(pk10r$BroodYear)))
CU_year= CU_year[order(CU_year[,1]),]
CU_year[,3]=paste(CU_year[,1],CU_year[,2],sep="_")
pk10r$cu_yr=match(paste(pk10r$CU,pk10r$BroodYear,sep='_'),CU_year[,3])
dl=list(N=nrow(pk10r),
L=max(pk10r$BroodYear)-min(pk10r$BroodYear)+1,
C=length(unique(pk10r$CU)),
J=length(unique(pk10r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(pk10r$CU)), #CU index by observation
C_ii=as.numeric(factor(pk10r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(pk10r$River)), #River index by observation
J_ii=pk10r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(pk10r$BroodYear)), #brood year index
R_S=pk10r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=pk10r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(pk10r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
fit1bh_pk_pd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
print(fit1bh_pk_pd$summary(variables=c('b_ECA','b_ECA_cu')),n=100)
print(fit1bh_pd$summary(variables=c('b_ECA','b_ECA_cu')),n=100)
pk10r
unique(pk10r$BroodYear)
pk10r <- read.csv("./origional-ecofish-data-models/Data/Processed/pke_SR_10_hat_yr_reduced_VRI90.csv")
unique(pk10r$BroodYear)
dl=list(N=nrow(ch20r),
L=max(ch20r$BroodYear)-min(ch20r$BroodYear)+1,
C=length(unique(ch20r$CU)),
J=length(unique(ch20r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(ch20r$CU)), #CU index by observation
C_ii=as.numeric(factor(ch20r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(ch20r$River)), #River index by observation
J_ii=ch20r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(ch20r$BroodYear)), #brood year index
R_S=ch20r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=ch20r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(ch20r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
### Fit set 1: CU-level varying effects for ECA effects ####
fit1ric_pd <- m1ric$sample(data=dl,
seed = 33456,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
ch20r<- subset(ch20r,exp(ln_RS)<=80)
#two rivers with duplicated names:
ch20r$River=ifelse(ch20r$WATERSHED_CDE=='950-169400-00000-00000-0000-0000-000-000-000-000-000-000','SALMON RIVER 2',ch20r$River)
ch20r$River=ifelse(ch20r$WATERSHED_CDE=="915-486500-05300-00000-0000-0000-000-000-000-000-000-000",'LAGOON CREEK 2',ch20r$River)
ch20r=ch20r[order(factor(ch20r$River),ch20r$BroodYear),]
rownames(ch20r)=seq(1:nrow(ch20r))
#normalize ECA - logit transformation (ie. log(x/(1-x)))
ch20r$logit.ECA=qlogis(ch20r$ECA_age_proxy_forested_only+0.005)
ch20r$logit.ECA.std=(ch20r$logit.ECA-mean(ch20r$logit.ECA))/sd(ch20r$logit.ECA)
#normalize cumulative % disturbed
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs<1,1,ch20r$disturbedarea_prct_cs)
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs2>99,99,ch20r$disturbedarea_prct_cs2)
ch20r$logit.pdisturb=qlogis(ch20r$disturbedarea_prct_cs2/100)
ch20r$logit.pdisturb.std=(ch20r$logit.pdisturb-mean(ch20r$logit.pdisturb))/sd(ch20r$logit.pdisturb)
#sparse matrix of spawners
S_mat=make_design_matrix(ch20r$Spawners,ch20r$River)
#sparse matrix of ECA
#average ECA by stock
#just to see an overview of ECA by river
eca_s=ch20r%>%group_by(River)%>%summarize(m=mean(ECA_age_proxy_forested_only*100),m.std=mean(logit.ECA.std),range=max(ECA_age_proxy_forested_only*100)-min(ECA_age_proxy_forested_only*100),cu=unique(CU))
ECA_mat=make_design_matrix(ch20r$logit.ECA.std,ch20r$River)
disturb_mat=make_design_matrix(ch20r$logit.pdisturb.std,ch20r$River)
#watershed area by river
area_mat=make_design_matrix(ch20r$ln_area_km2_std,ch20r$River)
#interaction matrix
ExA_mat=ECA_mat*area_mat
#extract max S for priors on capacity & eq. recruitment
smax_prior=ch20r%>%group_by(River) %>%summarize(m.s=max(Spawners),m.r=max(Recruits))
#ragged start and end points for each SR series
N_s=rag_n(ch20r$River)
#cus by stock
cu=distinct(ch20r,River,.keep_all = T)
summary(factor(cu$CU))
#time points for each series
L_i=ch20r%>%group_by(River)%>%summarize(l=n(),tmin=min(BroodYear)-1954+1,tmax=max(BroodYear)-1954+1)
CU_year=expand.grid(levels(factor(ch20r$CU)),seq(min(ch20r$BroodYear),max(ch20r$BroodYear)))
CU_year= CU_year[order(CU_year[,1]),]
CU_year[,3]=paste(CU_year[,1],CU_year[,2],sep="_")
ch20r$cu_yr=match(paste(ch20r$CU,ch20r$BroodYear,sep='_'),CU_year[,3])
dl=list(N=nrow(ch20r),
L=max(ch20r$BroodYear)-min(ch20r$BroodYear)+1,
C=length(unique(ch20r$CU)),
J=length(unique(ch20r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(ch20r$CU)), #CU index by observation
C_ii=as.numeric(factor(ch20r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(ch20r$River)), #River index by observation
J_ii=ch20r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(ch20r$BroodYear)), #brood year index
R_S=ch20r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=ch20r$Spawners,
ECA=ECA_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(ch20r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
ch20r<- subset(ch20r,exp(ln_RS)<=80)
#two rivers with duplicated names:
ch20r$River=ifelse(ch20r$WATERSHED_CDE=='950-169400-00000-00000-0000-0000-000-000-000-000-000-000','SALMON RIVER 2',ch20r$River)
ch20r$River=ifelse(ch20r$WATERSHED_CDE=="915-486500-05300-00000-0000-0000-000-000-000-000-000-000",'LAGOON CREEK 2',ch20r$River)
ch20r=ch20r[order(factor(ch20r$River),ch20r$BroodYear),]
rownames(ch20r)=seq(1:nrow(ch20r))
#normalize ECA - logit transformation (ie. log(x/(1-x)))
ch20r$logit.ECA=qlogis(ch20r$ECA_age_proxy_forested_only+0.005)
ch20r$logit.ECA.std=(ch20r$logit.ECA-mean(ch20r$logit.ECA))/sd(ch20r$logit.ECA)
#normalize cumulative % disturbed
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs<1,1,ch20r$disturbedarea_prct_cs)
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs2>99,99,ch20r$disturbedarea_prct_cs2)
ch20r$logit.pdisturb=qlogis(ch20r$disturbedarea_prct_cs2/100)
ch20r$logit.pdisturb.std=(ch20r$logit.pdisturb-mean(ch20r$logit.pdisturb))/sd(ch20r$logit.pdisturb)
#sparse matrix of spawners
S_mat=make_design_matrix(ch20r$Spawners,ch20r$River)
#sparse matrix of ECA
#average ECA by stock
#just to see an overview of ECA by river
eca_s=ch20r%>%group_by(River)%>%summarize(m=mean(ECA_age_proxy_forested_only*100),m.std=mean(logit.ECA.std),range=max(ECA_age_proxy_forested_only*100)-min(ECA_age_proxy_forested_only*100),cu=unique(CU))
ECA_mat=make_design_matrix(ch20r$logit.ECA.std,ch20r$River)
disturb_mat=make_design_matrix(ch20r$logit.pdisturb.std,ch20r$River)
#watershed area by river
area_mat=make_design_matrix(ch20r$ln_area_km2_std,ch20r$River)
#interaction matrix
ExA_mat=ECA_mat*area_mat
#extract max S for priors on capacity & eq. recruitment
smax_prior=ch20r%>%group_by(River) %>%summarize(m.s=max(Spawners),m.r=max(Recruits))
#ragged start and end points for each SR series
N_s=rag_n(ch20r$River)
#cus by stock
cu=distinct(ch20r,River,.keep_all = T)
summary(factor(cu$CU))
#time points for each series
L_i=ch20r%>%group_by(River)%>%summarize(l=n(),tmin=min(BroodYear)-1954+1,tmax=max(BroodYear)-1954+1)
CU_year=expand.grid(levels(factor(ch20r$CU)),seq(min(ch20r$BroodYear),max(ch20r$BroodYear)))
CU_year= CU_year[order(CU_year[,1]),]
CU_year[,3]=paste(CU_year[,1],CU_year[,2],sep="_")
ch20r$cu_yr=match(paste(ch20r$CU,ch20r$BroodYear,sep='_'),CU_year[,3])
dl=list(N=nrow(ch20r),
L=max(ch20r$BroodYear)-min(ch20r$BroodYear)+1,
C=length(unique(ch20r$CU)),
J=length(unique(ch20r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(ch20r$CU)), #CU index by observation
C_ii=as.numeric(factor(ch20r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(ch20r$River)), #River index by observation
J_ii=ch20r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(ch20r$BroodYear)), #brood year index
R_S=ch20r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=ch20r$Spawners,
ECA=ECA_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(ch20r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
dl=list(N=nrow(ch20r),
L=max(ch20r$BroodYear)-min(ch20r$BroodYear)+1,
C=length(unique(ch20r$CU)),
J=length(unique(ch20r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(ch20r$CU)), #CU index by observation
C_ii=as.numeric(factor(ch20r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(ch20r$River)), #River index by observation
J_ii=ch20r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(ch20r$BroodYear)), #brood year index
R_S=ch20r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=ch20r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(ch20r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
### Fit set 1: CU-level varying effects for ECA effects ####
fit1ric_pd <- m1ric$sample(data=dl,
seed = 33456,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
dl=list(N=nrow(ch20r),
L=max(ch20r$BroodYear)-min(ch20r$BroodYear)+1,
C=length(unique(ch20r$CU)),
J=length(unique(ch20r$River)),
N_i=L_i$l,#series lengths
C_i=as.numeric(factor(cu$CU)), #CU index by stock
C_j=as.numeric(factor(ch20r$CU)), #CU index by observation
C_ii=as.numeric(factor(ch20r$cu_yr)), #CU index by observation
J_i=as.numeric(factor(ch20r$River)), #River index by observation
J_ii=ch20r$cu_yr, #index specific to each unique CU-Year combination
ii=as.numeric(factor(ch20r$BroodYear)), #brood year index
R_S=ch20r$ln_RS,
S=S_mat, #design matrix for spawner counts
Sv=ch20r$Spawners,
ECA=disturb_mat, #design matrix for standardized ECA
#     ECA_vec=as.matrix(ch20r$logit.ECA.std), #vector of ECA ()
Area=area_mat, #design matrix for watershed area
ExA=ExA_mat, #design matrix for std ECA x watershed area
start_y=N_s[,1],
end_y=N_s[,2],
start_t=L_i$tmin,
end_t=L_i$tmax,
pSmax_mean=0.5*smax_prior$m.s, #prior for smax based on max observed spawners
pSmax_sig=smax_prior$m.s,
pRk_mean=0.75*smax_prior$m.r, #prior for smax based on max observed spawners
pRk_sig=smax_prior$m.r)
### Fit set 1: CU-level varying effects for ECA effects ####
fit1ric_pd <- m1ric$sample(data=dl,
seed = 33456,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
fit1bh_cpd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.995,
max_treedepth = 20)
fit1bh_cpd <- m1bh$sample(data=dl,
seed = 12345,
chains = 8,
iter_warmup = 200,
iter_sampling = 800,
refresh = 100,
adapt_delta = 0.999,
max_treedepth = 20)
transf_beta<- function(y){
n.obs <- sum(!is.na(y))
(y * (n.obs - 1) + 0.5) / n.obs
}
ch20r$disturbedarea_m2_cs
ch20r$disturbedarea_prct_cs
transf_beta(ch20r$disturbedarea_prct_cs/100)
summary(transf_beta(ch20r$disturbedarea_prct_cs/100))
qlogis(transf_beta(ch20r$disturbedarea_prct_cs/100))
hist(transf_beta(ch20r$disturbedarea_prct_cs/100))
hist(qlogis(transf_beta(ch20r$disturbedarea_prct_cs/100)))
#normalize cumulative % disturbed
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs<1,1,ch20r$disturbedarea_prct_cs)
ch20r$disturbedarea_prct_cs2=ifelse(ch20r$disturbedarea_prct_cs2>99,99,ch20r$disturbedarea_prct_cs2)
ch20r$logit.pdisturb=qlogis(ch20r$disturbedarea_prct_cs2/100)
hist(ch20r$logit.pdisturb)
write.csv(fit1bh_cpd$summary(),'./stan models/outs/summary/fit1bh_cpd_summary.csv')
fit1bh_cpd$save_object('./stan models/outs/fits/fit1bh_cpd.RDS')
